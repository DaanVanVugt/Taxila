---
http_interactions:
- request:
    method: get
    uri: https://www.wur.nl/en/Resources-1/RSS/Calendar.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:05 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:07 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:07 GMT
      Content-Length:
      - '21386'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=F6AFF7D1A45B337AD986D06AB7187620; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d4265b336252eb2d59ed7c874ede195bb4fcfd765aa306716a8707166ea525e246783386e9a0127d860c7e103be769c6610f88874a1cc8a767f4e7230b85cef7a981e09dd2251d67505536f63adb93d16;
        Path=/
      - X-CSRF-Token=6eeed6b056d9157ac1f0257f302cf9981c46fb8f1ab9a608a0cfcf60fa3f9712;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/rhi-seminar-breaking-tradition-teacher-student-effects-at-english-universities-during-the-scientific-revolution.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:09 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:10 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:10 GMT
      Content-Length:
      - '42821'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=C73F091E7A1C8031B0D79E781994852D; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52df688d9a59ccb0b80d8fc4b7f22688ea50af197d0b990daceb4e7815727196c9c8635dc74b4fa89633a28c4fb7060723e45da16db7a33bef73c7559162b7a2e1b38093fe926a9763d96d498715283bf42;
        Path=/
      - X-CSRF-Token=6223b02667f0b5e6b21b8796c8e322e78fdd11fb5a5d506d239083e5065a7b67;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/process-intensification-for-cho-cell-biomanufacturing-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:12 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:13 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:13 GMT
      Content-Length:
      - '42823'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=81C011217FB5351804ADDAF2A6584383; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52da8c41b96802492b0c5044b964fc861ee8721dd167ac37f375ab01cb01bfb4681baf32899d5f702d37ccfbe3457c9dace0708d261df764033d32e78b0c9fdc911a4a6a7f39513979dfa0756e7ba106845;
        Path=/
      - X-CSRF-Token=f094de5085a23d9070429b40e79d0c7e40067095e8c706476aea75abe44080ea;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/genomics-assisted-dissection-of-black-rot-resistance-in-brassica-napus-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:14 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:16 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:16 GMT
      Content-Length:
      - '43259'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=FE5EEFC386C3F072B6A014DBA97D30F6; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52de6be01a2e17d45e9f3d0d05dc8e6e1fefb2bb9943452a6f51ba9fc76b3df486922a4de32dea55ce6c8cba30ab5a64b8f05689829e354b130208e4addf94a453a3685bae1952aab6ff80e609e4511a49d;
        Path=/
      - X-CSRF-Token=21a84fe306010558192b7f45bb1efd085e0601dbe50e3902f054c416baaffa83;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/spillover-of-pro-environmental-consumer-behavior-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:17 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:18 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:18 GMT
      Content-Length:
      - '43023'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=A37FE8BD75C3CEA9E85672DCBE90355D; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52df8f996f73af8f5e1044640bcf78ac3cabab6027ae4d3ebc8588a6729887a9e75e27e3c6cb862d9614f881e34a94760ae15843a42ffd3ccecb37df08ab8acf40402ba47913983844e8b8bc65197953174;
        Path=/
      - X-CSRF-Token=b07f116ddc60bb175be158eade9e8022b62affbf67faec5373c28499d24a7a2b;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/statistical-models-and-tools-for-qtl-mapping-in-multi-parent-population-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:20 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:21 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:21 GMT
      Content-Length:
      - '43018'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=2A0F1F503CAAB2F2B8523FE1FD4E39D5; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52da44759bb6d06bb73d3dd0c7c6c9829f8189a720d08d31e70d9b6d68e1847b195c4c37a6e3c723e59a6ba19792fefd41024010a5aa0d3c0a3b3255f1423e0e1c5be95221ac43378e2413096c9b2035bdf;
        Path=/
      - X-CSRF-Token=8dad02e97e387fe39f9a871848999ea4049ff83dd99dd901096fdbbe02cf552e;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/wdcc-meetup-federated-data-infrastructures-the-next-step-for-wur-2.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:23 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:24 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:24 GMT
      Content-Length:
      - '42360'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=31D2C9AA975557A4CD123FDFB1C41279; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d157c326aa525f2cd6a7b1880b0cecab351cc02ad71a75e076e37a678f31b273bd27197998b27d3bad3acc72d63317d34e2f75ac1f5d69ac640e2a85ea4de7fd2c67473a8fb839d9f5dff0bf8f56e3ada;
        Path=/
      - X-CSRF-Token=84bb25997ab936a49d9932021e1bdd9f66a063872159eb28195c7d2b2e2c3eaf;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/evolutionary-genetics-of-nonself-recognition-regarding-social-and-sexual-interactions-of-fungi-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:25 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:27 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:27 GMT
      Content-Length:
      - '43527'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=48BEAE30B34831BE4688E5B644D86B44; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52dcc1025e98e66bb851d9feb93765f6f0f430a486e01ea11a6c5ae29973635bfc29fa9de11c3403e8c17679fdbf9a3520e99428fd3f1177f928ba727b800b4659c285d1ade47788803900fa86da322be80;
        Path=/
      - X-CSRF-Token=4859dd66487214d6d55d8ef7277ae26e77f07edde7dc604fb0062849aa0c9e64;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/functionalities-of-mildly-extracted-mung-bean-proteins-from-mung-bean-seeds-to-a-highly-functional-plant-based-protein-ingredient-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:28 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:29 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:29 GMT
      Content-Length:
      - '44211'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=2C9ADE96E8057C9703ACFA184312D8B8; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52dce0b5e1b625fe6ed9d2f3f163886a8ab4479bfe0b47be4e4e9d8b929192b34c16b43a9d94a639df28fef0e7e4d6564d7330d8f5684b8fdfd02d60966eb506320c73e96e9ccb969e9612ea5ddb3c398ec;
        Path=/
      - X-CSRF-Token=6501ad838d5866225506d7e05cfa24a966e2f400c97e423faadebb6572353dc2;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/listeria-monocytogenes-stress-resistant-variants-impact-on-high-hydrostatic-pressure-processing-efficacy-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:30 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:31 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:31 GMT
      Content-Length:
      - '43771'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=D30AE429F3AEA4FDF6BD9AF08D37F8E3; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52dffaa17fce6b72752e81a07c1b15126db1effde1350781df404eefca2361f7ed673ea7ed4be0188731697b4d0715b7712ee564fcb43a58bd27b89f2a23f84d75454987112fb9eac172cf22a4f26b2c847;
        Path=/
      - X-CSRF-Token=026b48ca27968e00ce22217f2cc743e78b2e743fa9b77a0d144500a6d635a332;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/data-science-artificial-intelligence-and-geographic-information-systems-gis-for-environmental-sciences.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:33 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:34 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:34 GMT
      Transfer-Encoding:
      - chunked
      Connection:
      - Transfer-Encoding
      - keep-alive
      Set-Cookie:
      - JSESSIONID=2D7917C89C5A69CC19A40515A6580947; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d29a2bdb8acc153a398f7c9a8601ec2e220459941322a3b6511a5c6ff840ce76294baf033b38ff629d074ce990e6a76b4b0a32fdef6f234b4bbe4311c2a8f84c56087f770b1c5fe181e145e3681f3a95f;
        Path=/
      - X-CSRF-Token=6424e52f1fcf06f42cdae0c4bde1c67f03f98ec26c2519ca54a31f09906d84e3;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/pitch-your-robot.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:35 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:36 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:36 GMT
      Content-Length:
      - '41945'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=5F50CE4CE4C3060FA431CD70D612D830; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d11648e6f3ab088e553320ca6e3a2f35ee621cfbc79eb24ee9f8ffc65b749d1732c5e877ebd0ec5d8c2d4d3731e5bcaaa40d21f5ce02f5b0010a4c176ebbdc4e853c8d880c2b7eabf28e031e57b8429b2;
        Path=/
      - X-CSRF-Token=7d3131a86f8a2c1f15757f4aa9b2c78497ae91d88dfab0fb9f070e06a03bfd01;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/functional-analysis-of-effector-proteins-of-the-vascular-wilt-fungus-verticillium-dahliae-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:37 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:38 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:38 GMT
      Content-Length:
      - '43238'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=0530C728E6CD96F7452CD8A1CAA57A30; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52ddd3dbdba5b41e5e7e8ac1280ca109984744095640c2a983be109c3cd30c40e0320cb544ae4f7a66330d698996517e21acabc8b700617e0703891138381626df3b7c9d57576144e8b187aa2f50613f6e3;
        Path=/
      - X-CSRF-Token=4e326520d3d0c02ec6ecd8ab5cf108b5a1fd2aca3ad5dda2e088f717927ca947;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/quality-parameters-of-vacuum-fried-fruits-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:40 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:41 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:41 GMT
      Content-Length:
      - '42958'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=89C772DD4D13D9E9907D79D5AD15695F; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d16342ca167bf6888c8289cf518306b7370062aac23c1fed3eb9d6d957439f8df2000eb404a5f2bb60101c15b4b18dfb8f3abf2e683d9f0489afe0a5cc32df43bbfeef48525ae2310d8561bf2d88eafe1;
        Path=/
      - X-CSRF-Token=05fd990b41bd4756d7258346b8de57a59cc5bd677fb25d1ff957c6d47f63ef0b;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/selenium-enriched-nannochloropsis-oceanica-for-aquaculture-feed-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:41 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:42 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:42 GMT
      Content-Length:
      - '43065'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=BEA8A689FABE941187B05D271465322C; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d615231ae64176cf06d7dae00f1bc8dec26073253de7c763e20f8a79ba2be8ece86aae92e8bad2c633079bef3e69bf4e46b245752b83074186e8e2fccb526566fac7d08ce96810d307c699c27ee2f89a4;
        Path=/
      - X-CSRF-Token=28e9e1c94599fa25031a1bb48c43898def3d23a8742b217d8dd918ad30e4f13d;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/can-farmers-meet-all-the-societal-demands-with-the-available-natural-resources-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:44 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:45 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:45 GMT
      Content-Length:
      - '43201'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=12FB77BD4AA9854D32F00097AB55519B; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d7c0c1330ed302b2f97b09f53eed9b0ec0da89c060f7a08b705677e4e0461e5a03ce23220e710c350508595b7ec9dd1ca0932561b12219534ae7891d7357338c9db2027a445b462a6fed02719dd0cce07;
        Path=/
      - X-CSRF-Token=cfee235dfc23b64e1675253b7e4e33e12991293a7e5b787a1b660ceb9e80a959;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/improving-the-sustainability-of-fruit-and-vegetable-supply-chains-in-ecuador-the-role-of-organization-and-coordination-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:47 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:49 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:49 GMT
      Content-Length:
      - '43854'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=58F77F9BC532F8DD998D83FBBB41BEDC; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d7f28e88719e6af967769ffa781bb3457f93ba2b1713d6fccbcf6daa2d0aef6924524d8ef0c2d8903237818cf4df79b6c53420eb69157c0f5b95a7c9a51bea33fcc9faec7f562a0e7c986618f2b28ddbe;
        Path=/
      - X-CSRF-Token=af1527e1dfc776033daa6d5322b874851a27f8b1b02abf3c591905ee68319693;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/psychedelic-mushrooms.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:50 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:51 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:51 GMT
      Content-Length:
      - '43527'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=F0D2B15BB12E25AB8BBF48186B199D70; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d6c2681e6df86358b383bd6758647c992ace800f0f6bf3f335e9544b8211f285592edafb1c17db22dc401202f797979c95c510b41485eaa6a5a08fe3b28958d5b001d707837f03b48420fac51589a5be1;
        Path=/
      - X-CSRF-Token=4f2dc618e41e608d4a96aa04705a15ac3150c382bd005af587737c3af7a31891;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/show/resemeet-9-february.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:53 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:53 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:53 GMT
      Content-Length:
      - '40170'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=F54745AE24A60469F945D6FBAECDB235; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52dc164158134fa386d7bfe4e3b6b6c44bb1271efb69cac46a61dc3fedb4c663c17147520eed837ddc1f064571faeb00b70b9832d0a9bf81e34bb985c1660d395d6807e7c08d95d67789876bcd82195ea29;
        Path=/
      - X-CSRF-Token=324150d7d0553a9327535a09dfdf29c8478e4dbe8344d3ca90dc26b224a9ff73;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: UTF-8
      string: "<!DOCTYPE html>\n<!--[if lt IE 7 ]> <html class=\"no-js ie6 ie7 ie8\"
        lang=\"en-us\"> <![endif]-->\n<!--[if IE 7 ]>    <html class=\"no-js ie7 ie8\"
        lang=\"en-us\"> <![endif]-->\n<!--[if IE 8 ]>    <html class=\"no-js ie8\"
        lang=\"en-us\"> <![endif]-->\n<!--[if IE 9 ]>    <html class=\"no-js ie9\"
        lang=\"en-us\"> <![endif]-->\n<!--[if gt IE 9]><!--> <html class=\"no-js\"
        lang=\"en-us\"> <!--<![endif]-->\n  <head>\n    <!--\n      Page generated:
        03/02/2023\n      Powered by GX\n      GX Software\n      Boston - San Francisco
        - Nijmegen\n      https://www.gxsoftware.com/\n    -->\n    <meta http-equiv=\"Content-Language\"
        content=\"en-us\" />\n    <meta charset=\"utf-8\">\n        <title>Resemeet
        9 February - WUR</title>\n    <meta name=\"websiteid\" content=\"26098\" />\n<meta
        name=\"content_last_modified_date\" content=\"2023-02-03T11:01:03Z\" />\n
        \   <meta name=\"pagetitle\" content=\"Resemeet 9 February\" />\n    <meta
        name=\"mediacontenttype\" content=\"activity\" />\n    <meta name=\"contentid\"
        content=\"715464\" />\n\t<meta name=\"wurtitle\" content=\"resemeet 9 february\"
        />\n      <meta name=\"category\" content=\"colloquium\" />\n        <meta
        name=\"expertise\" content=\"animal_production_systems\" />\n      <meta name=\"organization\"
        content=\"730\" />\n        <meta name=\"organizationname\" content=\"Animal
        Production Systems\" />\n      <meta name=\"publicationdate\" content=\"2023-02-02T09:28:00Z\"
        />\n      <meta name=\"creationdate\" content=\"2023-02-02T09:24:39Z\" />\n
        \     <meta name=\"articleUrl\" content=\"/en/show/resemeet-9-february.htm\"
        />\n              <meta name=\"startdate\" content=\"2023-02-09T10:30:00Z\"
        />\n\t\t\t\t  <meta name=\"month\" content=\"2_2023\" />\n\t\t\t\t<meta name=\"nextdate_dt\"
        content=\"2023-02-09T10:30:00Z\" />\n\t\t\t\t\t\t<meta name=\"nextenddate_dt\"
        content=\"2023-02-09T10:30:00Z\" />\n          <meta name=\"locationId\" content=\"1326\"
        />\n        <meta name=\"coursehasnextdate\" content=\"1\"/>\n        <meta
        name=\"coursehasnextregistrationdate\" content=\"0\"/>\n        <meta name=\"coursehastimespanandregistrationperiod\"
        content=\"1\"/>\n      <meta name=\"keywords\" content=\"Wageningen University
        &amp; Research\" />\n    <meta name=\"Googlebot\" content=\"index,archive,follow\"
        />\n    <meta name=\"generator\" content=\"GX WebManager\" />\n      <meta
        name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n        <meta
        property=\"og:type\" content=\"article\"/>\n      <meta property=\"og:title\"
        content=\"Resemeet 9 February\"/>\n      <meta property=\"og:url\" content=\"https://www.wur.nl/en/show/resemeet-9-february.htm\"/>\n
        \     <meta property=\"og:image\" content=\"https://www.wur.nl/upload/3e64bc0f-b170-49ab-a82b-0bc090f9148d_Resemeet1.jpg\"/>\n
        \     <meta property=\"og:site_name\" content=\"WUR\"/>\n      <meta property=\"og:description\"
        content=\"Thursday 9 February we organise a Resemeet in which Shirley will
        present her thesis proposal\"/>\n      <meta name=\"article:published_time\"
        content=\"2023-02-02T09:24:00CET\"/>\n        <meta name=\"article:modified_time\"
        content=\"2023-02-02T09:28:00CET\"/>\n        <meta name=\"article:expiration_time\"
        content=\"2023-02-10T23:00:00CET\"/>\n      <!-- Start FreeStyle -->\n      <!--
        \ FreeStyle -->\n\t\t\t    <script >\n        window.Promise || document.write('<script
        src=\"/static/design/0F93A6B8-6D8B-42C0-9D7C-D9B69FD7EC78-56E9-fsm/js/es6-promise.js\"><\\/script>');\n</script>\n
        \   <script >\n        </script>\n        <link rel=\"preload\" href=\"/static/design/0F93A6B8-6D8B-42C0-9D7C-D9B69FD7EC78-56E9-fsm/rel/fonts/wurfont/wurfont-regular-webfont.woff2\"
        as=\"font\" type=\"font/woff2\" crossorigin />\n        <style>\n          @font-face
        {\n            font-family: 'wurfont';\n            src:\n              url('/static/design/0F93A6B8-6D8B-42C0-9D7C-D9B69FD7EC78-56E9-fsm/rel/fonts/wurfont/wurfont-regular-webfont.woff2')
        format('woff2'),\n              url('/static/design/0F93A6B8-6D8B-42C0-9D7C-D9B69FD7EC78-56E9-fsm/rel/fonts/wurfont/wurfont-regular-webfont.woff')
        format('woff');\n            font-weight: normal;\n            font-style:
        normal;\n            font-display: fallback;\n          }\n        </style>\n
        \       <script>\n</script>\n    <script >\n        </script>\n        <script>\n
        \         // Set date format for jquery ui\n           Date.format = 'dd-mm-yyyy';\n
        \       </script>\n        <!--[if lt IE 9]>\n          <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.6/html5shiv.min.js\"></script>\n
        \         <script>window.html5 || document.write('<script src=\"/static/design/0F93A6B8-6D8B-42C0-9D7C-D9B69FD7EC78-56E9-fsm/rel/javascripts/vendor/html5.js\"><\\/script>')</script>\n
        \       <![endif]-->\n        <script>\n          if (document.getElementsByTagName)
        { document.getElementsByTagName('html')[0].className = document.getElementsByTagName('html')[0].className.replace('no-js',
        'js') }\n        </script>\n        <script>\n        !function(){\n          var
        hasBCPermissionLevel = function(level) {\n            function getCookie(key)
        {\n              var cookies = document.cookie.split('; ');\n              for
        (var i = 0, l = cookies.length; i < l; i++) {\n                var parts =
        cookies[i].split('=');\n                if (parts.shift() === key) { return
        parts.join('='); }\n              }\n            }\n            try {\n              var
        cookie = getCookie('BCPermissionLevel');\n              if (cookie !== null
        && typeof(cookie) != 'undefined' && (cookie == level)) { return true; }\n
        \           } catch(err) { }\n            return false;\n          };\n          //
        ====================\n          // = Register globals =\n          // ====================\n
        \         window.hasBCPermissionLevel = hasBCPermissionLevel;\n        }();\n
        \       </script>\n        <script>\n</script>\n    <script >\n        //
        Open external links in a new tab\n        document.addEventListener(\"DOMContentLoaded\",
        function () {\n          if (document.body.classList.contains(\"inContextMode\"))
        {\n            return;\n          }\n          Array.from(document.getElementsByTagName(\"a\")).forEach(function
        (element) {\n            if (\n              // eslint-disable-next-line no-useless-escape\n
        \             !element.href.match(/^mailto\\:/) &&\n              element.hostname
        != location.hostname\n            ) {\n              element.setAttribute(\"target\",
        \"_blank\");\n            }\n          });\n        });\n</script>\n    <script
        >\n        !function(c){function e(e){for(var t,n,o=e[0],a=e[1],r=0,i=[];r<o.length;r++)n=o[r],Object.prototype.hasOwnProperty.call(l,n)&&l[n]&&i.push(l[n][0]),l[n]=0;for(t
        in a)Object.prototype.hasOwnProperty.call(a,t)&&(c[t]=a[t]);for(s&&s(e);i.length;)i.shift()()}var
        n={},l={2:0};function u(e){if(n[e])return n[e].exports;var t=n[e]={i:e,l:!1,exports:{}};return
        c[e].call(t.exports,t,t.exports,u),t.l=!0,t.exports}u.e=function(o){var a,r,e,i,t,n=[],c=l[o];return
        0!==c&&(c?n.push(c[2]):(t=new Promise(function(e,t){c=l[o]=[e,t]}),n.push(c[2]=t),(a=document.createElement(\"script\")).charset=\"utf-8\",a.timeout=120,u.nc&&a.setAttribute(\"nonce\",u.nc),a.src=u.p+\"\"+({}[t=o]||t)+\"-\"+{0:\"8a996985efba64f04a95\",1:\"24177631c94c06f0f4c7\",9:\"086c88753bc6d2547f8c\",10:\"1acb7a50d1ad5ed564c1\",11:\"f1842f8faac9883feceb\",13:\"04402382e1f59d9178d2\",15:\"e5e1aebd674a7cc6a024\"}[t]+\".js\",r=new
        Error,e=function(e){a.onerror=a.onload=null,clearTimeout(i);var t,n=l[o];0!==n&&(n&&(t=e&&(\"load\"===e.type?\"missing\":e.type),e=e&&e.target&&e.target.src,r.message=\"Loading
        chunk \"+o+\" failed.\\n(\"+t+\": \"+e+\")\",r.name=\"ChunkLoadError\",r.type=t,r.request=e,n[1](r)),l[o]=void
        0)},i=setTimeout(function(){e({type:\"timeout\",target:a})},12e4),a.onerror=a.onload=e,document.head.appendChild(a))),Promise.all(n)},u.m=c,u.c=n,u.d=function(e,t,n){u.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},u.r=function(e){\"undefined\"!=typeof
        Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},u.t=function(t,e){if(1&e&&(t=u(t)),8&e)return
        t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(u.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof
        t)for(var o in t)u.d(n,o,function(e){return t[e]}.bind(null,o));return n},u.n=function(e){var
        t=e&&e.__esModule?function(){return e.default}:function(){return e};return
        u.d(t,\"a\",t),t},u.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},u.p=\"/static/design/0F93A6B8-6D8B-42C0-9D7C-D9B69FD7EC78-56E9-fsm/js/dist/\",u.oe=function(e){throw
        console.error(e),e};var t=(o=window.webpackJsonp=window.webpackJsonp||[]).push.bind(o);o.push=e;for(var
        o=o.slice(),a=0;a<o.length;a++)e(o[a]);var s=t;u(u.s=31)}({31:function(e,t,n){n(32)},32:function(b,v,x){var
        S,k;x(33),Promise.all([x.e(0),x.e(1),x.e(9),x.e(10)]).then(function(){window.Raven=x(50).installRaven(),x(51),window.Raven.wrap(function(){S=[x(12),x(52),x(53),x(54),x(55),x(48),x(56),x(29),x(57),x(58),x(59),x(60),x(61),x(62),x(63),x(64),x(65),x(66),x(67),x(68),x(69),x(47),x(70),x(71),x(72),x(73),x(49)],void
        0===(k=function(l,u,s,d,p,e,h,f,m,t,g,w,y){l(document).ready(function(){function
        e(){matchMedia(\"only screen and (min-width: 1024px)\").matches&&l(\"#breadcrumb
        > ul\").Breadcrumb(),l(\"body\").stickyHeader()}l.fn.InitMobileMenu(),matchMedia(\"only
        screen and (max-width: 600px)\").matches&&(l.fn.initContactinfo(),l.fn.leadVideos()),p.init(\"#site-wide-search-form\"),e(),document.querySelectorAll(\"#breadcrumb
        .expander\").forEach(function(e){e.addEventListener(\"click\",function(e){return
        e.preventDefault()})}),window.onresize=function(){e()},l(\"aside .banner--with-superpower\").length&&l(\"aside
        .banner--with-superpower\").stickyBanner();function n(e){(e=l(e.find(\".with-tabs\")))&&e.each(function(){new
        d(this)})}var t,o;n(l(\"body\")),document.querySelector(\".opening-hours\")&&w(\".opening-hours\"),0<l(\".header-collection--library\").length&&(y(),(t=function(){l(\".header-collection--library\").height(l(\".header-collection__tabs
        .tabs\").outerHeight()+200)})(),l(window).resize(function(){clearTimeout(o),o=setTimeout(t,50)})),l(\"body\").on(\"overlay-content\",function(e,t){n(l(t))}),l(\"[data-wur-overlay=true]\").Overlay(),l(\"[data-toggle-parent-class]\").Toggler(),l(\".carrousel\").Carrousel(),l(\"a[data-wur-append-to-parent]\").on(\"click\",function(e){var
        t=l(this);e.preventDefault();var n=t.parents(t.data(\"wur-append-to-parent\")),o=t.data(\"wur-append-to-parent-toggle-class\");0<n.length&&l.ajax({url:t.attr(\"href\")}).done(function(e){n.append(e),o&&n.toggleClass(o)})}),document.querySelector(\".follow-wrapper\")&&document.querySelector(\".follow\")&&g(),l(\".timeline
        .stage\").Timeline(),l(\".gallery\").Gallery(),l(\".layout-full\").find(\".header-collection\").parents(\"#main\").find(\"header
        h1\").remove();var a=l(\".interactive-map .map:not(.map-embed)\");0<a.length&&Promise.all([x.e(15),x.e(11)]).then(function(){var
        e=[x(77)];!function(e){e(function(e){a.map(function(){return new e(this)})})}.apply(null,e)}).catch(x.oe);var
        r=l(\".map--kml\");0<r.length&&0===l(\"body.inContextMode\").length&&x.e(13).then(function(){var
        e=[x(78)];!function(e){e(function(e){r.map(function(){return new e(this)})})}.apply(null,e)}).catch(x.oe);var
        i=l(\".datepicker\");0<i.length&&(S=[x(30)],void 0===(k=function(){i.each(function(e,t){t=l(t);t.datepicker({dateFormat:t.data(\"date-format\")||\"dd/mm/yy\",changeYear:!1,showOtherMonths:!0,prevText:\"&#61447;\",nextText:\"&#61446;\",showOn:\"both\",buttonText:'<span
        class=\"icon\">&#57600;</span>'})})}.apply(v,S))||(b.exports=k));var c=l(\"input.autocomplete\");0<c.length&&(S=[x(30)],void
        0===(k=function(){c.autocomplete({source:function(e,t){var n={};n[this.element.attr(\"name\")]=e.term,l.ajax({url:this.element.data(\"wur-autocomplete-url\"),dataType:\"json\",data:n,success:function(e){t(l.map(e.results,function(e){return{label:e.title,value:e.title}}))}})},minLength:2,open:function(){return
        l(this).autocomplete(\"widget\").css(\"z-index\",150),!1}})}.apply(v,S))||(b.exports=k)),0<l(\"a.lightbox\").length&&(S=[x(74)],void
        0===(k=function(){l(\"a.lightbox\").fancybox({beforeLoad:function(){this.title=l(this.element).find(\"img\").attr(\"alt\"),1<this.group.length&&(this.title+=\"
        <span>\"+(this.index+1).toString()+\"/\"+this.group.length.toString()+\"</span>\")},tpl:{closeBtn:'<a
        title=\"Close\" class=\"fancybox-item fancybox-close\" href=\"javascript:;\">&#61699;</a>'},padding:20,loop:!1,helpers:{title:{type:\"inside\"}},autoCenter:!1})}.apply(v,S))||(b.exports=k)),m(),l(\".countdown-clock\").each(function(e,t){new
        s(t)}),h.updateTwitterSharingUrl(\".social-sharing__button--twitter\"),h.updateLinkedinSharingUrl(\".social-sharing__button--linkedin\"),h.updateWhatsappSharingUrl(\".social-sharing__button--whatsapp\"),l(\".social-sharing__button\").not(l(\".social-sharing__button--email\")).on(\"click\",function(e){e.preventDefault(),h.socialSharingOpeninPopup(l(this).attr(\"href\"),500,500)}),0<l(\".twitter-timeline\").length&&h.loadTwitter(),f.navigateSmoothlyToAnchorElement(\".lead-content__scroll
        .anchorelement\"),f.navigateSmoothlyToAnchorElement(\".filters-results-wrapper\"),f.navigateSmoothlyToAnchorElement(\".collection--anchors
        .anchorelement\",\".collection\"),f.navigateSmoothlyToAnchorElement(\".anchor-link\"),f.navigateSmoothlyToAnchorElement(\".anchor-link-scroll\"),l(\"#ongoingtoggle\").change(function(){var
        e=u(window.location.search.slice(1));l(this).is(\":checked\")?e.ongoing=\"show\":e.ongoing=\"hide\",window.location=window.location.pathname+\"?\"+l.param(e)}),l(\"#orderbySelect\").change(function(){var
        e=u(window.location.search.slice(1));e.order=l(this).val(),window.location=window.location.pathname+\"?\"+l.param(e)})})}.apply(v,S))||(b.exports=k)})()}.bind(null,x)).catch(x.oe)},33:function(e,t){var
        n,o;window.dependencyResolver=(n=[],o=null,{getCallbacks:function(){return
        n.slice()},setDeferred:function(e){o=e},addCallback:function(e){o?o.then(e):n.push(e)}})}});\n</script>\n
        \   <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/design/0F93A6B8-6D8B-42C0-9D7C-D9B69FD7EC78-56E9-fsm/rel/stylesheet/general-e3fe3450d92a621396e8ca91cff75a7bc577286514d5b26ac34e0f5a9f083a68.css\"
        />\n    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/static/design/0F93A6B8-6D8B-42C0-9D7C-D9B69FD7EC78-56E9-fsm/rel/shortcut_icon/favicon.ico\"
        />\n    <!-- End FreeStyle -->\n\t\t\t<style>\n\t\t\t\t.wmpform:not(.csfw-loaded)
        input[type=\"submit\"], .addcsrfinputs:not(.csfw-loaded) input[type=\"submit\"],
        \n\t\t\t\t\t.addcsrfinputs:not(.csfw-loaded) button[type=\"submit\"] {\n\t\t\t\t\t\tpointer-events:
        none;\n\t\t\t\t\t\topacity: 0.5;\n\t\t\t\t}\n\t\t\t</style>\n          <link
        rel=\"canonical\" href=\"https://www.wur.nl/en/show/resemeet-9-february.htm\"
        />\n      <script src=\"//cdn.blueconic.net/wageningenur.js\" async></script>\n
        \     <!-- Start VWO Async SmartCode -->\n      <script type='text/javascript'
        id='vwoCode'>\n      window._vwo_code=window._vwo_code || (function() {\n
        \     var account_id=342889,\n      version=1.4,\n      settings_tolerance=2000,\n
        \     library_tolerance=2500,\n      use_existing_jquery=false,\n      is_spa=1,\n
        \     hide_element='body',\n      /* DO NOT EDIT BELOW THIS LINE */\n      f=false,d=document,vwoCodeEl=document.querySelector('#vwoCode'),code={use_existing_jquery:function(){return
        use_existing_jquery},library_tolerance:function(){return library_tolerance},finish:function(){if(!f){f=true;var
        e=d.getElementById('_vis_opt_path_hides');if(e)e.parentNode.removeChild(e)}},finished:function(){return
        f},load:function(e){var t=d.createElement('script');t.fetchPriority='high';t.src=e;t.type='text/javascript';t.innerText;t.onerror=function(){_vwo_code.finish()};d.getElementsByTagName('head')[0].appendChild(t)},getVersion:function(){return
        version},getMatchedCookies:function(e){var t=[];if(document.cookie){t=decodeURIComponent(document.cookie).match(e)||[]}return
        t},getCombinationCookie:function(){var e=code.getMatchedCookies(/(vis_opt_exp_\\d*._combi=[\\d,]+)/g);var
        i=[];e.forEach(function(e){var t=e.match(/([\\d,]+)/g);i.push(t.join('-'))});return
        i.join('|')},init:function(){window.settings_timer=setTimeout(function(){_vwo_code.finish()},settings_tolerance);var
        e=d.createElement('style'),t=hide_element?hide_element+'{opacity:0 !important;filter:alpha(opacity=0)
        !important;background:none !important;}':'',i=d.getElementsByTagName('head')[0];e.setAttribute('id','_vis_opt_path_hides');vwoCodeEl&&e.setAttribute('nonce',vwoCodeEl.nonce);e.setAttribute('type','text/css');if(e.styleSheet)e.styleSheet.cssText=t;else
        e.appendChild(d.createTextNode(t));i.appendChild(e);var n=this.getCombinationCookie();this.load('https://dev.visualwebsiteoptimizer.com/j.php?a='+account_id+'&u='+encodeURIComponent(d.URL)+'&f='+
        +is_spa+'&vn='+version+(n?'&c='+n:''));return settings_timer}};window._vwo_settings_timer
        = code.init();return code;}());\n      </script>\n      <!-- End VWO Async
        SmartCode -->\n      <script>\n        dataLayer = [{\n        }];\n      </script>\n
        \     <!-- Google Tag Manager -->\n      <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push(\n
        \       {'gtm.start': new Date().getTime(),event:'gtm.js'}\n        );var
        f=d.getElementsByTagName(s)[0],\n        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n
        \       'https://sgtm.wur.nl/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n
        \       })(window,document,'script','dataLayer','GTM-M2SRG8');\n      </script>\n
        \     <!-- End Google Tag Manager -->\n\t\t\t\t\t<script>\n\t\t// <![CDATA[\n\t\t\twindow.googleApiKey
        = \"AIzaSyB-X8zHYXvUCzNDrvEQdhbGCqNSermFmc8\";\n\t\t// ]]>\n\t</script>\n
        \ </head>\n    <body class=\"layout-article without-intro with-visual\">\n
        \   <!-- indexer: off -->\n      <!-- Google Tag Manager -->\n      <noscript><iframe
        src=\"//www.googletagmanager.com/ns.html?id=GTM-M2SRG8\"\n      height=\"0\"
        width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n
        \     <!-- End Google Tag Manager -->\n    <!-- Accessibility -->\n    <div
        id=\"skiplinks\">\n      Go directly to:\n      <ul>\n        <li><a title=\"Content\"
        href=\"#main\">Content</a></li>\n        <li><a title=\"Search box\" href=\"#site-wide-search-form\">Search
        box</a></li>\n        <li><a title=\"Breadcrumb\" href=\"#breadcrumb\">Breadcrumb</a></li>\n
        \     </ul>\n    </div>\n        <div class=\"page\">\n      <header>\n        <div
        class=\"WUREditableContentSection\">\n\t\t\t\t\t  <a href=\"/en.htm\" class=\"logo\"
        title=\"Wageningen University &amp; Research\" data-wm-linkcode=\"C01\"><img
        class=\"logo__img\" src=\"/upload/99f85964-d53b-4dc7-b3ff-fb62abc648ce_WUR_RGB_standard_2021-site.svg\"
        alt=\"Wageningen University and Research - To explore the potential of nature
        to improve the quality of life\" /></a>  <a href=\"/en.htm\" class=\"logo\"
        title=\"Wageningen University &amp; Research\" data-wm-linkcode=\"C01\"><img
        class=\"logo__img--mobile\" src=\"/upload/076099dc-32f2-43fd-bbb9-76720736e27c_WUR_W_secundary_mobile_2021_internet.svg\"
        alt=\"Wageningen University and Research - To explore the potential of nature
        to improve the quality of life\" /></a>\n\t\t\t\t</div>\n      </header>\n
        \     <article id=\"main\" role=\"main\">\n        <div class=\"content main\">\n
        \           <div class=\"visual\"><figure>\n\t\t\t\t<picture>\n<!--[if IE
        9]><video style=\"display: none;\"><![endif]-->\n\t\t\t\t\t\t\t\t<source  media=\"(min-width:
        601px)\" srcset=\"/upload_mm/f/6/a/3e64bc0f-b170-49ab-a82b-0bc090f9148d_Resemeet1_0ccb1fdc_750x400.jpg\">\n\t\t\t\t\t\t<!--[if
        IE 9]></video><![endif]-->\n\t\t\t\t\t\t\t<img src=\"/upload_mm/f/6/a/3e64bc0f-b170-49ab-a82b-0bc090f9148d_Resemeet1_0ccb1fdc_750x400.jpg\"
        \ alt=\"\">\n\t\t\t\t</picture>\n\t\t\t</figure></div>\n          <!-- indexer:
        on -->\n                      <header>\n                <p class=\"type\">\n
        \                     Colloquium\n                </p>\n            <h1 id=\"content\">Resemeet
        9 February</h1>\n          </header>\n          <!-- indexer: on -->\n          <p
        class=\"intro\">Thursday 9 February we organise a Resemeet in which Shirley
        will present her thesis proposal</p>\n          <!-- indexer: off -->\n          \t<!--
        indexer: on -->\n\t<div class=\"meta with-background\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>\n
        \                 Organised by\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<!--
        ORGANISATION -->\n        <a  href=\"/en/research-results/chair-groups/animal-sciences/cluster-animals-in-future-food-systems-and-society/animal-production-systems-group.htm\"
        class=\"\" title=\"Animal Production Systems\">Animal Production Systems</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t\t\t<td><p>\n
        \               Thu 9 February 2023\n                    10:30\n    </p></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Venue\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<!--
        wurpresentation location information pagepart -->\n\t\t\t\t\t\t\t\t<a href=\"/en/show/zodiac-building-number-122.htm\"
        class=\"navigation\" title=\"Zodiac, building number 122\">Zodiac, building
        number 122</a><br /></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Room</th>\n\t\t\t\t\t\t<td>A0108</td>\n\t\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\t<!--
        indexer: off -->\n        <section>\n          <!-- indexer: on -->\n          <div
        class=\"WUREditableContent\"><p><strong>Programme:</strong><br></p><p>Shirley
        Rongen<strong> </strong></p><p><strong>MOOVE: Improve the welfare of unweaned
        dairy calves undergoing long-distance transport</strong></p><p>Supervised
        by E. Bokkers</p><p></p><p></p></div>\n          <!-- indexer: off -->\n        </section>\n<img
        src=\"/web/contentViewCounter?contentid=715464\" width=\"0\" height=\"0\"
        style=\"display: none\" alt=\"\" />\n          <!-- indexer: off -->\n          \n
        \       </div>\n        <aside>\n              <!-- SHOWCONTACTBUTTON:  -->\n
        \ <!-- SHOWCONTACTBUTTON:  -->\n  \t\t\t<div class=\"contactinfo with-overlay\">\n
        \ \t\t\t\t<!-- ORGANISATION -->\n        <address class=\"vcard\">\n            <div
        class=\"photo-frame\">\n                  <img src=\"/upload_mm/4/6/2/34d436dc-cd3b-49f8-8120-0517f5e489b2_avatar_c0cb37f7_74x74.png\"
        \ alt=\"\"  width=\"74\"  height=\"74\" class=\"photo\"  />\n            </div>\n
        \           <div class=\"contact\">\n              <span></span>\n              <a
        \ href=\"/en/research-results/chair-groups/animal-sciences/cluster-animals-in-future-food-systems-and-society/animal-production-systems-group.htm\"
        class=\"\" title=\"Animal Production Systems\">\n                Animal Production
        Systems\n              </a>\n            </div>\n              <div class=\"actions\">\n
        \               <a class=\"button\" data-wur-overlay=\"true\" href=\"/en/show/resemeet-9-february.htm?contactpersonid=730&contactpersonname=Animal%20Production%20Systems&isorganisation=true&presentationid=399132\"
        rel=\"nofollow\" title=\"Contact form\">Contact form</a>\n              </div>\n
        \       </address>\n  \t\t\t\t<div class=\"extra-cards\">\n  \t\t\t\t\t<ul><li><!--
        ORGANISATION -->\n        <address class=\"vcard\">\n            <div class=\"photo-frame\">\n
        \                 <img src=\"/upload_mm/4/6/2/34d436dc-cd3b-49f8-8120-0517f5e489b2_avatar_c0cb37f7_74x74.png\"
        \ alt=\"\"  width=\"74\"  height=\"74\" class=\"photo\"  />\n            </div>\n
        \           <div class=\"contact\">\n              <span></span>\n              <a
        \ href=\"/en/research-results/chair-groups/animal-sciences/cluster-animals-in-future-food-systems-and-society/animal-production-systems-group.htm\"
        class=\"\" title=\"Animal Production Systems\">\n                Animal Production
        Systems\n              </a>\n            </div>\n              <div class=\"actions\">\n
        \               <a class=\"button\" data-wur-overlay=\"true\" href=\"/en/show/resemeet-9-february.htm?contactpersonid=730&contactpersonname=Animal%20Production%20Systems&isorganisation=true&presentationid=399132\"
        rel=\"nofollow\" title=\"Contact form\">Contact form</a>\n              </div>\n
        \       </address></li></ul>\t  \n  \t\t\t\t</div>\n  \t\t\t</div>\n              <div
        class=\"BcRightColumn1\"></div>\n            \n              <div class=\"content\">\n
        \               <!-- indexer: on -->\n                    <div class=\"WUREditableContent\"></div>\n
        \               <!-- indexer: off -->\n              </div>\n            \n
        \         </aside>\n\t        <div class=\"content bottom\">\n\t          <!--
        indexer: on -->\n\t                  <div class=\"WUREditableContent\"></div>\n\t
        \         <!-- indexer: off -->\n\t          \n\t        </div>\n              <!--
        indexer: off -->\n        <div class=\"social-sharing\">\n          <a class=\"social-sharing__button
        social-sharing__button--twitter\"\n            data-share-via=\"WUR\"\n            data-share-href=\"https://www.wur.nl/en/show/resemeet-9-february.htm\"\n
        \           data-share-text=\"Resemeet+9+February\"\n            href=\"https://twitter.com/share\"\n
        \           target=\"_blank\"\n            rel=\"noopener noreferrer\">\n
        \           <span>Twitter</span>\n          </a>\n          <a class=\"social-sharing__button
        social-sharing__button--whatsapp\"\n            data-share-href=\"https://www.wur.nl/en/show/resemeet-9-february.htm\"\n
        \           href=\"whatsapp://send\"\n            data-action=\"share/whatsapp/share\"\n
        \           target=\"_blank\"\n            rel=\"noopener noreferrer\">\n
        \           <span>Whatsapp</span>\n          </a>\n          <a class=\"social-sharing__button
        social-sharing__button--linkedin\"\n            data-share-href=\"https://www.wur.nl/en/show/resemeet-9-february.htm\"\n
        \           href=\"https://www.linkedin.com/shareArticle\"\n            target=\"_blank\"\n
        \           rel=\"noopener noreferrer\">\n            <span>Linkedin</span>\n
        \         </a>\n          <a class=\"social-sharing__button social-sharing__button--email\"\n
        \           data-share-href=\"https://www.wur.nl/en/show/resemeet-9-february.htm\"\n
        \           href=\"/en/show/resemeet-9-february.htm?presentationid=2815164\"\n
        \           data-wur-overlay=\"true\">\n            <span>Email</span>\n          </a>\n
        \       </div>\n              \n      </article>\n      <a href=\"#\" class=\"mobile-menu\">\n
        \ <span class=\"mobile-menu__icon\">\n    <span class=\"mobile-menu__icon-bar\"></span>\n
        \   <span class=\"mobile-menu__icon-bar\"></span>\n    <span class=\"mobile-menu__icon-bar\"></span>\n
        \ </span>\n  <span class=\"mobile-menu__label\">Menu</span>\n</a>\n        <nav
        class=\"site-wide\">\n          <ul>\n            <li class=\"item-1\"><a
        href=\"/en/about-wur.htm\" class=\"navigation\" title=\"About WUR\">About
        WUR</a></li>\n              <li class=\"item-2\"><a href=\"/en/jobs.htm\"
        class=\"navigation\" title=\"Vacancies\">Vacancies</a></li>\n              <li
        class=\"item-3\"><a href=\"/en/contact-wageningen-university-research.htm\"
        class=\"navigation\" title=\"Contact\">Contact </a></li>\n              <li
        class=\"item-4\"><a href=\"/en/login.htm\" class=\"navigation\" title=\"Login\">Login</a></li>\n
        \         </ul>\n          <menu class=\"language\" type=\"list\">\n      <a
        data-toggle-parent-class=\"display\" href=\"#\">\n        <div class=\"navigation-largescreen\">en|English</div>\n
        \       <div class=\"navigation-mobile\">EN</div>\n      </a>\n      <ul>\n
        \                   <li class=\"navigation-largescreen\"><a  href=\"/\" class=\"navigation\"
        title=\"nl|Startpagina\" lang=\"nl\" hreflang=\"nl-NL\">nl|Startpagina</a></li>\n
        \     </ul>\n    </menu>\n        </nav>\n        <div class=\"primary-navigation\">\n
        \         <div class=\"wrapper\">\n            <nav class=\"audience\">\n
        \ <ul>\n      <li><a  href=\"/en/education-programmes.htm\" class=\"navigation\"
        title=\"Education &amp; Programmes\">Education &amp;<br/> Programmes</a></li>\n
        \     <li><a  href=\"/en/research-results.htm\" class=\"navigation\" title=\"Research
        &amp; Results\">Research &amp;<br/> Results</a></li>\n      <li><a  href=\"/en/value-creation-cooperation.htm\"
        class=\"navigation\" title=\"Value Creation &amp; Cooperation\">Value Creation
        &amp;<br/> Cooperation</a></li>\n  </ul>\n</nav>\n              <div class=\"WUREditableContentSection\">\n\t\t\t\t\t<form
        class=\"site-search\" id=\"site-wide-search-form\" data-wur-autocomplete-json=\"/en.htm?cachetimeout=600&amp;excludeContentTypes=banner%2Cdetailbeheerder%2Cdetailgenus%2Cdetailras%2Cdetailspecies%2Cdigitalassetmanager_download%2Cdocument%2Cdamdownload%2Cexpertiseareashomepage%2Cactivity%2Corganisation%2Cadditionalinfo%2Cblogpost%2Cproductservice%2Ccase%2Cdownload&amp;maxSearchResults=5&amp;maxTotalResults=50&amp;presentationid=399120&amp;showSuggest=false&amp;usepostfixmatching=false&amp;weightFields=sort_pagetitle%2F50%2Ckeyword%2F30%2Csort_mediacontenttype%2F10\"
        method=\"get\" action=\"/web/show/search\"><fieldset class=\"displayNone\">\n<input
        type=\"hidden\" name=\"id\" value=\"88776\" />\n<input type=\"hidden\" name=\"langid\"
        value=\"42\" />\n<input type=\"hidden\" name=\"from\" value=\"\" />\n<input
        type=\"hidden\" name=\"to\" value=\"\" />\n<input type=\"hidden\" name=\"webid\"
        value=\"26098\" />\n<input type=\"hidden\" name=\"searchid\" value=\"17181938\"
        /></fieldset>\n  <fieldset>\n    <div class=\"input\">\n      <label for=\"site-search-field\"
        class=\"acc\">Search</label>\n      <input id=\"site-search-field\" type=\"text\"
        autocomplete=\"off\" name=\"keyword\" placeholder=\"Search\" class=\"site-search-field\"
        />\n    </div>\n    <button class=\"button button-search\" type=\"submit\">\n
        \       <span class=\"acc\">\n        Search\n        </span>\n      <span
        class=\"icon\">&#57601;</span>\n    </button>\n    <button class=\"button
        button-close\" type=\"button\">\n        <span class=\"acc\">\n        search_label_remove\n
        \       </span>\n      <span class=\"icon\">&#xf103;</span>\n    </button>\n
        \ </fieldset>\n</form>\n\t\t\t\t</div>\n          </div>\n        </div>\n
        \         <nav id=\"breadcrumb\">\n      <div class=\"js-menu-copy\"></div>\n
        \     <span class=\"breadcrumb__title\">You are here</span>\n      <ul>\n
        \               <li>\n                  <span>\n                    <a href=\"/en.htm\"
        class=\"label\" title=\"Home\">Home</a>\n                    <a class=\"expander\"
        href=\"#\">Click to expand</a>\n                  </span>\n                  <div
        class=\"submenu two-columns\">\n                      <ul>\n                            <li><a
        href=\"/en/education-programmes.htm\" class=\"navigation\" title=\"Education
        &amp; Programmes\">Education &amp; Programmes</a></li>\n                            <li><a
        href=\"/en/research-results.htm\" class=\"navigation\" title=\"Research &amp;
        Results\">Research &amp; Results</a></li>\n                            <li><a
        href=\"/en/value-creation-cooperation.htm\" class=\"navigation\" title=\"Value
        Creation &amp; Cooperation\">Value Creation &amp; Cooperation</a></li>\n                            <li><a
        href=\"/en/about-wur.htm\" class=\"navigation\" title=\"About WUR\">About
        WUR</a></li>\n                            <li><a href=\"/en/news-wur.htm\"
        class=\"navigation\" title=\"News\">News</a></li>\n                            <li><a
        href=\"/en/themes.htm\" class=\"navigation\" title=\"Themes\">Themes</a></li>\n
        \                           <li><a href=\"/en/dossiers.htm\" class=\"navigation\"
        title=\"Dossiers\">Dossiers</a></li>\n                            <li><a href=\"/en/calendar-1.htm\"
        class=\"navigation\" title=\"Calendar\">Calendar</a></li>\n                            <li><a
        href=\"/en/wageningen-university.htm\" class=\"navigation\" title=\"Wageningen
        University\">Wageningen University</a></li>\n                            <li><a
        href=\"/en/wageningen-university.htm\" class=\"navigation\" title=\"University\">University</a></li>\n
        \                     </ul>\n                      <ul>\n                            <li><a
        href=\"/en/benefactors.htm\" class=\"navigation\" title=\"University Fund
        Wageningen\">University Fund Wageningen</a></li>\n                            <li><a
        href=\"/en/alumni.htm\" class=\"navigation\" title=\"Alumni\">Alumni</a></li>\n
        \                           <li><a href=\"/en/international-staff.htm\" class=\"navigation\"
        title=\"International staff\">International staff</a></li>\n                            <li><a
        href=\"/en/jobs.htm\" class=\"navigation\" title=\"Vacancies\">Vacancies</a></li>\n
        \                           <li><a href=\"/en/contact-wageningen-university-research.htm\"
        class=\"navigation\" title=\"Contact\">Contact </a></li>\n                      </ul>\n
        \                 </div>\n                </li>\n              <li class=\"no-expand\">\n
        \               <span>\n                  <a href=\"/en/show/resemeet-9-february.htm\"
        class=\"label\" title=\"Resemeet 9 February\">Resemeet 9 February</a>\n                </span>\n
        \             </li>\n      </ul>\n      <div class=\"BcRightColumn1\"></div>\n
        \   </nav>\n        </div>\n        <footer>\n        <div class=\"columns\">\n
        \       <div class=\"col current-pillar WUREditableContent\">\n\t\t\t\t\t
        \   <a href=\"/en.htm\" class=\"normal\" title=\"Wageningen University &amp;
        Research\" data-wm-linkcode=\"C19\">\n        <img src=\"/upload/7161da8e-91cf-4991-828a-6e0d80962622_WUR_ZW_standard_2021_site.svg\"
        \ alt=\"Wageningen University and Research - To explore the potential of nature
        to improve the quality of life\"   class=\"left logo\" title=\"Wageningen
        University and Research - To explore the potential of nature to improve the
        quality of life\" />\n    </a>  <div class=\"buttons\">\n  <p>\n    To explore
        the potential of nature to improve the quality of life.\n  </p>\n  </div>
        \     <ul class=\"links\" id=\"listElement_31531228\">\n  <li><a href=\"/en/social-media-1.htm\"
        class=\"normal\" title=\"Follow Wageningen University &amp; Research on social
        media\" data-wm-linkcode=\"C66\">WUR on Social Media</a>\n    </li>\n    </ul>
        \     <ul class=\"links\" id=\"listElement_31531262\">\n  <li><a href=\"/en/jobs.htm\"
        class=\"normal\" title=\"Career at WUR\" data-wm-linkcode=\"C72\">We are looking
        for talented colleagues!</a>\n    </li>\n    </ul>\n\t\t\t\t</div>\t\t\t\t\t
        \n\t\t<div class=\"col WUREditableContent\">\n\t\t\t\t\t    <h2 ><a href=\"/en/education-programmes.htm\"
        class=\"normal\" title=\"Education &amp; Programmes\" data-wm-linkcode=\"C61\">Education
        &amp; Programmes</a></h2>\n      <ul class=\"links\" id=\"listElement_31200306\">\n
        \ <li><a href=\"/en/wageningen-university.htm\" class=\"normal\" title=\"University\"
        data-wm-linkcode=\"C02\">University</a>\n    </li>\n  <li><a href=\"/en/education-programmes/bachelor.htm\"
        class=\"normal\" title=\"Bachelor's\" data-wm-linkcode=\"C21\">Bachelor's
        programmes</a>\n    </li>\n  <li><a href=\"/en/education-programmes/master.htm\"
        class=\"normal\" title=\"Master's\" data-wm-linkcode=\"C22\">Master's programmes</a>\n
        \   </li>\n  <li><a href=\"/en/education-programmes/phd-programme.htm\" class=\"normal\"
        title=\"PhD Programme\" data-wm-linkcode=\"C24\">PhD programme</a>\n    </li>\n
        \ <li><a href=\"/en/education-programmes/education-for-professionals.htm\"
        class=\"normal\" title=\"Education for Professionals\" data-wm-linkcode=\"C25\">Education
        for professionals</a>\n    </li>\n  <li><a href=\"/en/alumni.htm\" class=\"normal\"
        title=\"Alumni\" data-wm-linkcode=\"C65\">Alumni</a>\n    </li>\n  <li><a
        href=\"/en/education-programmes/current-students.htm\" class=\"normal\" title=\"Current
        students\" data-wm-linkcode=\"C71\">Current students</a>\n    </li>\n  <li><a
        href=\"/en/education-programmes/contact-study-information-office.htm\" class=\"normal\"
        title=\"Contact the Study Information Office\" data-wm-linkcode=\"C52\">Contact
        about studying</a>\n    </li>\n    </ul>\n\t\t\t\t</div>\t\t\t\t\t \n\t\t<div
        class=\"col WUREditableContent\">\n\t\t\t\t\t    <h2 ><a href=\"/en/research-results.htm\"
        class=\"normal\" title=\"Research &amp; Results\" data-wm-linkcode=\"C04\">Research
        &amp; Results</a></h2>\n      <ul class=\"links\" id=\"listElement_21802245\">\n
        \ <li><a href=\"/en/research-results/research-institutes.htm\" class=\"normal\"
        title=\"Research Institutes\" data-wm-linkcode=\"C44\">Research Institutes</a>\n
        \   </li>\n  <li><a href=\"/en/research-results/chair-groups.htm\" class=\"normal\"
        title=\"Chair groups of Wageningen University &amp; Research\" data-wm-linkcode=\"C45\">Chair
        groups</a>\n    </li>\n  <li><a href=\"/en/research-results/statutory-research-tasks.htm\"
        class=\"normal\" title=\"Statutory research tasks\" data-wm-linkcode=\"C46\">Statutory
        research tasks</a>\n    </li>\n  <li><a href=\"/en/research-results.htm\"
        class=\"normal\" title=\"Research &amp; Results\" data-wm-linkcode=\"C47\">Research
        themes</a>\n    </li>\n  <li><a href=\"https://research.wur.nl/\" class=\"normal\"
        title=\"https://research.wur.nl/\" data-wm-linkcode=\"C64\">Research@WUR</a>\n
        \   </li>\n  <li><a href=\"/en/library.htm\" class=\"normal\" title=\"Library\"
        data-wm-linkcode=\"C37\">Library</a>\n    </li>\n  <li><a href=\"/en/contact-wageningen-university-research.htm\"
        class=\"normal\" title=\"Contact with Wageningen University &amp; Research\"
        data-wm-linkcode=\"C62\">Contact with WUR</a>\n    </li>\n    </ul>\n\t\t\t\t</div>\t\t\t\t\t
        \n\t\t<div class=\"col WUREditableContent\">\n\t\t\t\t\t    <h2 ><a href=\"/en/value-creation-cooperation.htm\"
        class=\"normal\" title=\"Value Creation &amp; Cooperation\" data-wm-linkcode=\"C18\">Value
        Creation &amp; Cooperation</a></h2>\n      <ul class=\"links\" id=\"listElement_29442069\">\n
        \ <li><a href=\"/en/value-creation-cooperation/collaborating-with-wur-1.htm\"
        class=\"normal\" title=\"Collaborating with WUR\" data-wm-linkcode=\"C55\">Collaborating</a>\n
        \   </li>\n  <li><a href=\"/en/value-creation-cooperation/value-for-the-world.htm\"
        class=\"normal\" title=\"Value for the world\" data-wm-linkcode=\"C56\">Value
        for the world</a>\n    </li>\n  <li><a href=\"/en/value-creation-cooperation/value-for-the-world/impact-in-practice.htm\"
        class=\"normal\" title=\"Impact in practice\" data-wm-linkcode=\"C57\">Impact
        in practice</a>\n    </li>\n  <li><a href=\"/en/value-creation-cooperation/collaborating-with-wur-1/facilities-tools/wageningen-shared-research-facilities.htm\"
        class=\"normal\" title=\"Shared Research Facilities\" data-wm-linkcode=\"C63\">Facilities
        &amp; equipment</a>\n    </li>\n  <li><a href=\"/en/value-creation-cooperation/collaborating-with-wur-1/in-dialogue-finding-answers-together.htm\"
        class=\"normal\" title=\"In dialogue: finding answers together\" data-wm-linkcode=\"C69\">In
        dialogue with WUR</a>\n    </li>\n  <li><a href=\"/en/value-creation-cooperation/collaborating-with-wur-1/entrepreneurship-at-wur.htm\"
        class=\"normal\" title=\"Entrepreneurship at WUR\" data-wm-linkcode=\"C60\">Entrepreneurship</a>\n
        \   </li>\n  <li><a href=\"/en/benefactors.htm\" class=\"normal\" title=\"University
        Fund Wageningen\" data-wm-linkcode=\"C70\">University Fund Wageningen</a>\n
        \   </li>\n    </ul><p></p>\n\t\t\t\t</div>\t\t\t\t\t \n        </div>\n      <nav>\n
        \   <ul>\n              <li class=\"item-1\"><a href=\"/en/contact-wageningen-university-research.htm\"
        class=\"navigation\" title=\"Contact\">Contact </a></li>\n              <li
        class=\"item-2\"><a href=\"/en/about-wur.htm\" class=\"navigation\" title=\"About
        WUR\">About WUR</a></li>\n              <li class=\"item-3\"><a href=\"/en/jobs.htm\"
        class=\"navigation\" title=\"Vacancies\">Vacancies</a></li>\n              <li
        class=\"item-4\"><a href=\"/en/privacy-cookie-statement.htm\" class=\"navigation\"
        title=\"Privacy &amp; Cookie statement\">Privacy &amp; Cookie statement</a></li>\n
        \             <li class=\"item-5\"><a href=\"/en/general-terms-and-conditions-2.htm\"
        class=\"navigation\" title=\"General Terms and Conditions\">General Terms
        and Conditions</a></li>\n              <li class=\"item-6\"><a id=\"bcpm-footer-link\"
        \ href=\"/en/resources-1/your-profile-data.htm\" class=\"navigation\" title=\"Your
        profile data\">Your profile data</a></li>\n              <li class=\"item-7\"><a
        href=\"/en/disclaimer.htm\" class=\"navigation\" title=\"Disclaimer\">Disclaimer</a></li>\n
        \             <li class=\"item-8\"><a href=\"/en/accessibility-statement.htm\"
        class=\"navigation\" title=\"Accessibility Statement\">Accessibility Statement</a></li>\n
        \             <li class=\"item-9\"><a href=\"/en/about-wur/our-values/integrity/staff-and-integrity.htm\"
        class=\"navigation\" title=\"Staff and integrity\">Staff and integrity</a></li>\n
        \             <li class=\"item-11\"><a href=\"/en/login.htm\" class=\"navigation\"
        title=\"Login\">Login</a></li>\n        <li id=\"permisssion-settings\"></li>\n
        \   </ul>\n    </nav>\n      </footer>\n  <!-- Start FreeStyle scripts-->\n
        \   \n  <!-- End FreeStyle -->\n  <script type=\"text/javascript\" src=\"/static/wurpresentation/javascript/iaf-functions.js?r=34\"
        async></script>\n\t    <script type=\"application/ld+json\">\n        {\n
        \           \"@context\": \"https://schema.org\",\n            \"name\":\"Resemeet
        9 February\",\"description\":\"Thursday 9 February we organise a Resemeet
        in which Shirley will present her thesis proposal\",\"image\":{\"url\":\"https://www.wur.nl/upload/3e64bc0f-b170-49ab-a82b-0bc090f9148d_Resemeet1.jpg\",\"@type\":\"ImageObject\"},\"startDate\":\"2023-02-09T09:30:00Z\",\"location\":{\"name\":\"Zodiac,
        gebouwnummer 122\",\"description\":\"'Zodiac' betekent letterlijk 'dierenriem',
        een erg toepasselijke naam voor het gebouw dat het thuis is voor de Animal
        Sciences Group van Wageningen University & Research. \",\"image\":{\"url\":\"https://www.wur.nl/upload/09aa49c1-f89d-45c7-98d1-cdbe62d57903_490%20x%20330%20Zodiac%20-%20WUR_0003.jpg\",\"@type\":\"ImageObject\"},\"latitude\":\"51.9839048\",\"longitude\":\"5.6595488\",\"address\":{\"addressCountry\":\"NL\",\"addressLocality\":\"Wageningen\",\"postalCode\":\"6708
        WD\",\"streetAddress\":\"De Elst 1 \",\"@type\":\"PostalAddress\"},\"@type\":\"Place\"},\"organizer\":{\"name\":\"Animal
        Production Systems\",\"logo\":{\"url\":\"https://www.wur.nl/upload/99f85964-d53b-4dc7-b3ff-fb62abc648ce_WUR_RGB_standard_2021-site.svg\",\"@type\":\"ImageObject\"},\"@type\":\"Organization\"},\"@type\":\"Event\"\n
        \       }\n      </script>\n    </body>\n</html>"
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/what-is-up-with-that-gut-using-zebrafish-to-model-host-microbe-immune-interactions-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:56 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:37:58 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:37:58 GMT
      Content-Length:
      - '43553'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=33BDA7C795226F76FA96A8BD1B681D05; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d981b22748de5596e4dc1e42484ec3fa0f26fac3bc97f794419c32e2406fa74f2ef2c53e1200c6f0c2d965f2d01b7b0c3df1fe4d7a54da4f2f7bd18460ee24972d6466137c01461e4a6c1a25e1669d854;
        Path=/
      - X-CSRF-Token=8e7ed0a6d24a482b70e0fa7350e8b0888cffc8eb0dc82288b6026a356376c36b;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/agricultural-productivity-crop-diversity-and-nutritional-security-in-tanzania-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:37:59 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:38:01 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:38:01 GMT
      Content-Length:
      - '43548'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=8C1D8442DDC590A1DDE22FD00B4019CE; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d53555c5d2564888b29175ceffab4f265711ea64c8ea23ae48215fd339c76a70b3c62b3705cd353865a691e6380edf6e587e57f5713b6c305a00c949d25a91412caf3c9d45a76bda073047948512ed698;
        Path=/
      - X-CSRF-Token=24804d29bcb63624ee30fececac7562305b15ad4afe1cf9effb6733d4f2620d9;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/making-the-difference-consumer-oriented-marketing-strategy-of-a-new-attribute-expansion-through-a-spillover-phenomenon-lens-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:38:02 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:38:04 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:38:04 GMT
      Transfer-Encoding:
      - chunked
      Connection:
      - Transfer-Encoding
      - keep-alive
      Set-Cookie:
      - JSESSIONID=400D3344251067F470D4426D6959C29C; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d027c87b907a7f36810ceec8ed404d7068019c96a177263d076152621c195928db354862b5b52f0e114fa2f51f3e9b3daed4c804f67f321b9598a379646d3171ae5623b927f49d7c264f8633b9644d447;
        Path=/
      - X-CSRF-Token=ec094c1374eed5b5c6d13e2e791e64c741d006a6393e030271a598aa88487499;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/towards-agricultural-innovation-systems-4.0-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:38:05 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:38:06 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:38:06 GMT
      Content-Length:
      - '39987'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=1CBEAC7745D7F40292881C9BD818B720; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d9f47a78b417f8f253085cc042d8a78e3077b3af20bdaa0c13e85eec4a9332dd333ab91de39481c0fb074a9317be6d45b79469d124e93fcb15110cfe54f118a882a01607cfb4a4c5cdaeae249b29f5b78;
        Path=/
      - X-CSRF-Token=ddf3f1680838999d6333c3262506713eaac34fe483829ae03d18d575a93f3f8c;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/optimal-management-of-energy-resources-in-greenhouse-crop-production-systems-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:38:08 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:38:09 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:38:09 GMT
      Content-Length:
      - '43167'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=A3E0659E3AAABB0335FE632CC5D5B1C0; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52dd3a0c855503c75b0f7356a53be89b8ac7e1bf9296608e6eb2acb246acea479f4ed06a151d141f6c25e81f5cc264fe9b619ce76d584471cee4b4686f0911a633cfa226c077d9cfe9bc7401bfa4e85bd63;
        Path=/
      - X-CSRF-Token=3ad0ba053ee9ac9b4f6ef14b861ed53bec4b2a8c65ae780e676ecdd382808613;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/rhi-seminar-pupils-today-astronauts-tomorrow-the-impact-of-italys-1962-school-reform-on-human-capital-accumulation-.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:38:10 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:38:11 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:38:11 GMT
      Content-Length:
      - '41435'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=E86ECE6AB051E5DA8FBB65C2DF85B5F4; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52d9fe421450826e7d6240def1772bc3ec1e14c7c646f2fd7a172454fc69a58383a1ff22dffe62c00ad395d3e5f240588709c19fccfdaa668e8ae2df228329dd0fc940c3bdce5a43dd7eef13ab2ce42c6c2;
        Path=/
      - X-CSRF-Token=cbce7df7c445c4f67de7c9da91b988a3fec3386785cce5f904a34615b56eb884;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
- request:
    method: get
    uri: https://www.wur.nl/en/activity/genetic-diversity-key-to-transitions-in-agriculture-and-forestry-1.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - SAMEORIGIN
      Last-Modified:
      - Wed, 08 Feb 2023 15:38:12 GMT
      Content-Type:
      - text/html;charset=utf-8
      Expires:
      - Wed, 08 Feb 2023 15:38:13 GMT
      Cache-Control:
      - max-age=0, no-cache, no-store
      Pragma:
      - no-cache
      Date:
      - Wed, 08 Feb 2023 15:38:13 GMT
      Content-Length:
      - '43157'
      Connection:
      - keep-alive
      Set-Cookie:
      - JSESSIONID=B67202FB6D8D4E5A839DF8C984740D19; Path=/; Secure; HttpOnly
      - TS01004158=018a17a52dc9bcc3716dd53caf92b0bdedeee22b10be367c7247c9ebaee51a220c6075318f60d3be7709ab1acfa0f98bb0a36c807caeec5b5e8089aa88ed4dac1906c2c39efbfdd9f9abc19d50d332cb4adc5e2e70;
        Path=/
      - X-CSRF-Token=3bd8276c1ce477166ba5af1cd545a5a93a7788965171d53e65187103c03b859d;
        Path=/; Secure
      Aka-Cache-Status:
      - Miss from child
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 01 Jan 2019 00:00:00 GMT
recorded_with: VCR 6.1.0
