---
http_interactions:
- request:
    method: get
    uri: https://dcc-po.nl/agenda/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - openresty
      Date:
      - Mon, 11 Sep 2023 09:47:57 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Content-Length:
      - '20035'
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Content-Security-Policy:
      - 'connect-src surfnl.containers.piwik.pro surfnl.piwik.pro; default-src ''self'';
        font-src ''self'' data:; frame-src ''self'' www.google.com www.youtube.com
        player.vimeo.com; img-src ''self'' data: *.gravatar.com; script-src ''self''
        ''unsafe-inline'' surfnl.containers.piwik.pro polyfill.io www.googletagmanager.com;
        style-src ''self'' ''unsafe-inline'';'
      Age:
      - '3755'
      X-Varnish-Cache:
      - HIT
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 02 Jan 2019 11:00:00 GMT
recorded_with: VCR 6.1.0
