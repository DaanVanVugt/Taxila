version: '3.8'
services:
  app:
    container_name: ${PREFIX}-app
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: ${PREFIX}-app
    restart: always
    env_file:
      - .env-production
    depends_on:
      - db
      - solr
      - redis
    labels:
      - traefik.enable=true
      - traefik.http.routers.tess.tls=true
      - traefik.http.routers.tess.tls.certresolver=myresolver
      - traefik.http.routers.tess.rule=Host(`${HOSTNAME}`)
      - traefik.http.routers.tess.entrypoints=websecure
    volumes:
      - uploads:/code/public/system
  db:
    container_name: ${PREFIX}-db
    logging:
      driver: none
    image: postgres:14.2
    restart: always
    env_file:
      - .env-production
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: ${DB_NAME}_production
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
  dbbackups:
    container_name: ${PREFIX}-dbbackups
    image: kartoza/pg-backup:14-3.1
    volumes:
      - db-backups:/backups
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASS=${DB_PASSWORD}
      - DBLIST=${DB_NAME}_production
      - REMOVE_BEFORE=7
    restart: on-failure
    depends_on:
      - db
  solr:
    container_name: ${PREFIX}-solr
    image: solr:8
    restart: always
    volumes:
      - solr-data:/var/solr
      - ./solr:/opt/solr/server/solr/configsets/production
    command:
      - solr-precreate
      - production
      - /opt/solr/server/solr/configsets/production
  redis:
    container_name: ${PREFIX}-redis
    image: redis:6
    restart: always
    volumes:
      - redis-data:/data
  traefik:
    container_name: ${PREFIX}-traefik
    image: traefik:v2.6
    restart: always
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.webinsecure.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.webinsecure.http.redirections.entrypoint.to=websecure
      - --entrypoints.webinsecure.http.redirections.entrypoint.scheme=https
      - --certificatesresolvers.myresolver.acme.email=${CONTACT_EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=webinsecure
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt-data:/letsencrypt
volumes:
  db-data:
  db-backups:
  solr-data:
  redis-data:
  letsencrypt-data:
  uploads:
