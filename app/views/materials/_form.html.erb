<%= simple_form_for @material, :html => {:id => 'material_form'} do |f| %>
    <% if @material.errors.any? %>
        <div id="error_expl" class="panel panel-danger">
          <div class="panel-heading">
            <h3 class="panel-title"><%= pluralize(@material.errors.count, "error") %> prohibited this material from
              being saved:</h3>
          </div>
          <div class="panel-body">
            <ul>
              <% @material.errors.full_messages.each do |msg| %>
                  <li><%= msg %></li>
              <% end %>
            </ul>
          </div>
        </div>
    <% end %>

    <div class="form-group">
      <%= f.label :title %>
      <%= f.text_field :title, :class => 'form-control' %>
      <%#= error_span(@material[:title]) %>
    </div>
    <div class="form-group">
      <%= f.label :url, label: 'URL', :class => "required" %>
      <%= f.text_field :url, :class => 'form-control' %>
      <%#= error_span(@material[:url]) %>
    </div>
    <div class="form-group">
      <%= f.label :short_description %>
      <%= f.text_area :short_description, :class => 'form-control', :rows => '5' %>
      <%#= error_span(@material[:short_description]) %>
    </div>
    <div class="form-group">
      <%= f.label :long_description %>
      <%= f.text_area :long_description, :class => 'form-control', :rows => '10' %>
      <%#= error_span(@material[:long_description]) %>
    </div>
    <div class="form-group">
      <%= f.label :doi, "DOI" %>
      <%= f.text_field :doi, :class => 'form-control' %>
      <%#= error_span(@material[:doi]) %>
    </div>

    <%= render :partial => 'content_providers/partials/add_content_provider', :locals => {:f => f, :resource => @material} %>

    <%= render :partial => 'common/dropdown', :locals => {:field_label => 'Nodes', :field_name => 'node_ids', :resource => @material, :f => f,
                                                          :options => format_for_dropdown(Node.order(:name).all),
                                                          :existing => format_for_dropdown(@material.nodes),
                                                          :dropdown_toggle_button_name => "Associate with node"} %>

    <%= render :partial => 'common/multiple_input', :locals => {:field_name => 'scientific_topic_names',
                                                                :label => 'Scientific topics',
                                                                :resource => @material,
                                                                :f => f,
                                                                :placeholder_text => 'Start typing to find topics',
                                                                :suggestions => raw(scientific_topic_names_for_autocomplete.to_json),
                                                                :disabled => true} %>

    <%= render :partial => 'common/edit_suggestions', locals: { form: f } -%>

    <%= render :partial => 'common/multiple_input', :locals => {:field_name => 'keywords',
                                                                :resource => @material,
                                                                :f => f,
                                                                :suggestions => raw(Tess::AutocompleteManager.suggestions_array_for('keywords').to_json)} %>

    <%= render :partial => 'common/multiple_input', :locals => {:field_name => 'target_audience',
                                                                :resource => @material,
                                                                :f => f,
                                                                :suggestions => raw(Tess::AutocompleteManager.suggestions_array_for('target_audience').to_json)} %>
    <div class="form-group">
      <%= f.label :difficulty_level %>
      <%= f.select(:difficulty_level,
                   options_for_select(difficulty_options_for_select, @material.difficulty_level.blank? ? "notspecified" : @material.difficulty_level), {},
                   class: "form-control")
      %>
    </div>

    <div class="form-group">
      <%= f.label :licence %>
      <%= f.select(:licence,
                   options_for_select(licence_options_for_select, @material.licence.blank? ? "notspecified" : @material.licence), {},
                   class: "form-control")
      %>
    </div>

    <%= render :partial => 'common/multiple_input',
               :locals => {:field_name => 'authors',
                           :resource => @material,
                           :f => f,
                           :suggestions => raw([Tess::AutocompleteManager.suggestions_array_for('contributors') +
                                                    Tess::AutocompleteManager.suggestions_array_for('authors')].flatten.uniq.to_json)} %>

    <%= render :partial => 'common/multiple_input',
               :locals => {:field_name => 'contributors',
                           :resource => @material,
                           :f => f,
                           :suggestions => raw([Tess::AutocompleteManager.suggestions_array_for('contributors') +
                                                    Tess::AutocompleteManager.suggestions_array_for('authors')].flatten.uniq.to_json)} %>

    <%= render :partial => 'common/dropdown',
               :locals => {:field_name => 'package_ids',
                           :field_label => 'Packages',
                           :resource => @material,
                           :f => f,
                           :options => format_for_dropdown(available_packages(@material)),
                           :existing => format_for_dropdown(@material.packages),
                           :dropdown_toggle_button_name => "Add to package"} %>

    <%= render :partial => 'common/autocompleter', locals: { field_name: :events, url: events_path, f: f } %>

    <div class="form-group" id="external-resources">
      <%= f.label :external_resources %>

      <div id="external-resources-list">
        <% @material.external_resources.each_with_index do |external_resource, index| %>
            <%= render partial: 'common/external_resource_form',
                       locals: { form_name: 'material', index: index, external_resource: external_resource } %>
        <% end %>
      </div>

      <div class="row">
        <%= render :partial => 'common/biotools_suggestions', :locals => {:title_element => 'material_title'} %>
      </div>

      <a href="#" id="add-external-resource-btn" class="btn btn-info">
        <i class="fa fa-plus"></i> Add external resource
      </a>
    </div>

    <div class="form-group">
      <%= f.submit (f.object.new_record? ? "Register" : "Update") + " training material", :class => 'btn btn-primary' %>
      <%= link_to 'Back', :back, :class => "btn btn-info" %>
      <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                  materials_path, :class => 'btn btn-default' %>
    </div>
<% end %>



<div id="external-resource-template" style="display: none">
  <%= render partial: 'common/external_resource_form',
             locals: { form_name: 'material', external_resource: ExternalResource.new } %>
</div>


<script type="text/javascript">
function removeSuggestion(suggestion) {
    s = suggestion.replace(/[^a-zA-Z]/g, '');
    if (confirm("Are you sure you'd like to remove '" + suggestion + "'?")) {
        $("#add-topic-" + s).fadeOut(300, function(){
            $(this).remove();
        });
        $("#hidden-suggestion-" + s).remove();
        return true;
    } else {
        return false;
    }
}
</script>
