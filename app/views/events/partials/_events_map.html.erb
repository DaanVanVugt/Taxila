<div style="width: 100%; height: 750px; margin-top: 10px;" id="map-canvas"></div>

<script>
    var map;
    var events = [];
    var loadedMapScript = false;
    var events_shown = 0

    /* center on (0, 0). Map center and zoom will reconfigure later (fitbounds method)*/
    var mapOptions = {
        zoom: 10,
        center: new google.maps.LatLng(0, 0)
    };


    function prep() {
        <% unless events.blank? %>
        <% events.each do |event|  %>
        var event_display = "<a href='<%=event.url%>' target='_blank'>" +
                            "<h3><%=event.title%></h3></a>" +
                            "<b>Date: </b><%=event.start%><br />" +
                            "<b>Location:</b> <%=event.city%>, <%=event.country%><br />" +
                            "<b>Organizer:</b> <%=event.organizer%><br />"
        events.push([
            <%=event.latitude%>,
            <%=event.longitude%>,
            event_display,
            "<%=event.title%>"
        ]);
        <% end %>
        <% end %>
        //console.log(events.length + " initial events.");
    }

    function initialize() {
        events_shown = 0;
        prep();
        var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
        setEvents(map, events);
        $('#map-count').text(events_shown);
        loadedMapScript = true;
    }

    function setEvents(map, events) {
        var bounds = new google.maps.LatLngBounds();
        var infowindow = new google.maps.InfoWindow({content: "Content String"});
        for (var i = 0; i < events.length; i++) {
          // Check lat/lon are defined to avoid "Too much recursion" error
          if (typeof events[i][0] === 'number' && typeof events[i][1] === 'number') {
            var new_marker = createMarker(map, events[i], infowindow);
            bounds.extend(new_marker.position);
            events_shown = events_shown + 1;
          }
        }
        map.fitBounds(bounds);
    }

    function createMarker(map, event, infowindow) {
        var position = new google.maps.LatLng(event[0], event[1]);
        var marker = new google.maps.Marker({
            position: position,
            map: map,
            title: event[3]
        });
        google.maps.event.addListener(marker, 'click', function () {
            infowindow.setContent(event[2]);
            infowindow.open(map, marker);
        });
        return marker;
    }

    function showAllEvents() {
        events_shown = 0;
        var new_events = [];
        /*
         * TODO: Get all the events, somehow...
         */
        $.ajax({
            type: 'GET',
            url: '<%= events_url(params.merge(format: 'json_api')).html_safe -%>',
            dataType: 'json',
        }).done(function (res) {
            res.data.forEach(function(event) {
                var event_display = "<a href=" + event.attributes.url + " target='_blank'>" +
                            "<h3>" + event.attributes.title + "</h3></a>" +
                            "<b>Date: </b>" + event.attributes.start + "<br />" +
                            "<b>Location:</b>" + event.attributes.city + ", " + event.country + "<br />" +
                            "<b>Organizer:</b>" + event.attributes.organizer + "<br />";
                new_events.push([
                    event.attributes.latitude,
                    event.attributes.longitude,
                    event_display,
                    '"' + event.attributes.title + '"'
                ]);
            });
            //console.log(new_events.length + " new events.");
            var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
            var bounds = new google.maps.LatLngBounds();

            // TODO: Duplicated from above - check why a call to setEvents failed.
            var infowindow = new google.maps.InfoWindow({content: "Content String"});
            for (var i = 0; i < new_events.length; i++) {
              //console.log("NEW TYPES: " + new_events[i][0] + ", " + new_events[i][1]);
              if (new_events[i][0] !== null  && new_events[i][1] !== null) {
                var new_marker = createMarker(map, new_events[i], infowindow);
                bounds.extend(new_marker.position);
                events_shown = events_shown + 1;
              }
            }
            map.fitBounds(bounds);
            $('#map-count').text(events_shown);
            loadedMapScript = true;
        }).fail(function (error) {
            console.log("Error: " + error);
        });
    }

    function clearMap() {
        events = [];
        events_shown = 0;
        var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
        var clock = new google.maps.LatLng(53.1411505,0.345498);
        map.panTo(clock);
        $('#map-count').text(events_shown);
    }

    function showCurrentPageEvents() {
        events = [];
        initialize();
    }

</script>
