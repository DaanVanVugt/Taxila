<div class="form-group">
  <label>Address</label>
  <input id="map-search" class="map-control form-control" type="text" placeholder="Start typing an address...">
  <div id="google-map-form">Loading map...</div>
</div>

<div class="manual-address-fields">
  <div class="form-group">
    <%= f.label :venue %>
    <%= f.text_area :venue, :class => 'form-control' %>
  </div>
  <div class="form-group">
    <%= f.label :city %>
    <%= f.text_field :city, :class => 'form-control' %>
  </div>
  <div class="form-group">
    <%= f.label :county %>
    <%= f.text_field :county, :class => 'form-control' %>
  </div>
  <div class="form-group">
    <%= f.label :country %>
    <%= f.text_field :country, :class => 'form-control' %>
  </div>
  <div class="form-group">
    <%= f.label :postcode %>
    <%= f.text_field :postcode, :class => 'form-control' %>
  </div>

  <%= f.hidden_field :latitude %>
  <%= f.hidden_field :longitude %>
</div>

<script>
  var MapSearch = {
    map: null,
    marker: null,
    infowindow: null,

    init: function () {
      MapSearch.map = new google.maps.Map(document.getElementById('google-map-form'), {
        center: {
          lat: <%= f.object.latitude || 53.4674583 %>,
          lng: <%= f.object.longitude ||-2.233948899999973 %>
        }, // Center on existing event, or Kilburn building
        zoom: <%= f.object.latitude.blank? || f.object.longitude.blank? ? 3 : 13 %>
      });
      var input = document.getElementById('map-search');

      var autocomplete = new google.maps.places.Autocomplete(input);
      autocomplete.bindTo('bounds', MapSearch.map);

      MapSearch.infowindow = new google.maps.InfoWindow();
      MapSearch.marker = new google.maps.Marker({
        map: MapSearch.map,
        anchorPoint: new google.maps.Point(0, -29)
      });

      autocomplete.addListener('place_changed', function () {
        MapSearch.hideMarker();

        var place = autocomplete.getPlace();
        if (!place.geometry) {
          window.alert("Couldn't find that location on the map");
          return;
        }

        // If the place has a geometry, then present it on a map.
        if (place.geometry.viewport) {
          MapSearch.map.fitBounds(place.geometry.viewport);
        } else {
          MapSearch.map.setCenter(place.geometry.location);
          MapSearch.map.setZoom(17);  // Why 17? Because it looks good.
        }

        // Populate address fields
        var venue = place.name;

        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          switch (addressType) {
            case 'street_number':
              venue = venue + ', ' + place.address_components[i].short_name;
              break;
            case 'route':
              venue = venue + ', ' + place.address_components[i].long_name;
              break;
            case 'locality':
              $('#event_city').val(place.address_components[i].long_name);
              break;
            case 'administrative_area_level_2':
              $('#event_county').val(place.address_components[i].long_name);
              break;
            case 'country':
              $('#event_country').val(place.address_components[i].long_name);
              break;
            case 'postal_code':
              $('#event_postal_code').val(place.address_components[i].short_name);
              break;
          }
        }

        $('#event_venue').val(venue);

        $('#event_latitude').val(place.geometry.location.lat());
        $('#event_longitude').val(place.geometry.location.lng());

        MapSearch.placeMarker();
      });

      <% unless f.object.new_record? || f.object.online? || f.object.latitude.blank? || f.object.longitude.blank? %>
      MapSearch.placeMarker();
      <% end %>
    },

    placeMarker: function () {
      var venue = $('#event_venue').val();
      var city = $('#event_city').val();
      var country = $('#event_country').val();
      var lat = $('#event_latitude').val();
      var lon = $('#event_longitude').val();

      MapSearch.marker.setIcon(/** @type {google.maps.Icon} */({
        url: 'https://maps.gstatic.com/mapfiles/place_api/icons/geocode-71.png',
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(35, 35)
      }));
      MapSearch.marker.setPosition(new google.maps.LatLng(lat, lon));
      MapSearch.marker.setVisible(true);

      MapSearch.infowindow.setContent('<div><strong>' + venue + '</strong><br>' + city + ', ' + country);
      MapSearch.infowindow.open(MapSearch.map, MapSearch.marker);
    },

    hideMarker: function () {
      MapSearch.infowindow.close();
      MapSearch.marker.setVisible(false);
    }
  };

  MapSearch.init();
</script>
