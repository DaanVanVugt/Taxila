<%= simple_form_for(@workflow) do |f| %>
    <div class="row">
      <div class="col-md-4 col-md-push-8">
        <%= render :partial => 'workflows/partials/general_workflow_info' %>
      </div>
      <div class="col-md-8 col-md-pull-4">
        <h3>Metadata</h3>
        <% if @workflow.errors.any? %>
            <div id="error_expl" class="panel panel-danger">
              <div class="panel-heading">
                <h3 class="panel-title"><%= pluralize(@workflow.errors.count, "error") %> prohibited this workflow from
                  being saved:</h3>
              </div>
              <div class="panel-body">
                <ul>
                  <% @workflow.errors.full_messages.each do |msg| %>
                      <li><%= msg %></li>
                  <% end %>
                </ul>
              </div>
            </div>
        <% end %>

        <%= f.input :title %>

        <%= f.input :description, as: :text, input_html: { rows: 5 } %>

        <%= collapsible_panel('Extra metadata', 'extra-metadata') do %>
            <div class="form-group">
              <%= f.label :doi, "DOI" %>
              <%= f.text_field :doi, :class => 'form-control' %>
            </div>

            <%= render :partial => 'common/multiple_input', :locals => {:field_name => 'scientific_topic_names',
                                                                        :label => 'Scientific topics',
                                                                        :resource => @workflow,
                                                                        :f => f,
                                                                        :placeholder_text => 'Start typing to find topics',
                                                                        :suggestions => raw(scientific_topic_names_for_autocomplete.to_json),
                                                                        :disabled => true} %>

            <%= render :partial => 'common/multiple_input', :locals => {:field_name => 'keywords',
                                                                        :resource => @workflow,
                                                                        :f => f,
                                                                        :suggestions => raw(Tess::AutocompleteManager.suggestions_array_for('keywords').to_json)} %>


            <%= render :partial => 'common/multiple_input', :locals => {:field_name => 'target_audience',
                                                                        :resource => @workflow,
                                                                        :f => f,
                                                                        :suggestions => raw(Tess::AutocompleteManager.suggestions_array_for('target_audience').to_json)} %>

            <div class="form-group">
              <%= f.label :difficulty_level %>
              <%= f.select(:difficulty_level,
                           options_for_select(difficulty_options_for_select, @workflow.difficulty_level.blank? ? "notspecified" : @workflow.difficulty_level), {},
                           class: "form-control")
              %>
            </div>

            <div class="form-group">
              <%= f.label :licence %>
              <%= f.select(:licence,
                           options_for_select(licence_options_for_select, @workflow.licence.blank? ? "notspecified" : @workflow.licence), {},
                           class: "form-control")
              %>
            </div>

            <%= render :partial => 'common/multiple_input',
                       :locals => {:field_name => 'authors',
                                   :resource => @workflow,
                                   :f => f,
                                   :suggestions => raw([Tess::AutocompleteManager.suggestions_array_for('contributors') +
                                                            Tess::AutocompleteManager.suggestions_array_for('authors')].flatten.uniq.to_json)} %>

            <%= render :partial => 'common/multiple_input',
                       :locals => {:field_name => 'contributors',
                                   :resource => @workflow,
                                   :f => f,
                                   :suggestions => raw([Tess::AutocompleteManager.suggestions_array_for('contributors') +
                                                            Tess::AutocompleteManager.suggestions_array_for('authors')].flatten.uniq.to_json)} %>

        <% end %>

        <%= f.input :hide_child_nodes,
                    hint: 'Ticking this box will hide child nodes from the diagram until their parent node is clicked.' %>
      </div>
    </div>
    <div class="row">
      <div class="col-md-12">
        <div class="form-group actions">
          <%= f.submit "Save workflow", class: 'btn btn-primary workflow-form-submit' %>
          <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                      workflows_path, :class => 'btn btn-default' %>
        </div>

        <h3>Diagram</h3>
        <%= f.hidden_field :workflow_content  %>

        <% content_for :sidebar_title do %>
            <span class="muted">Nothing selected</span>
        <% end %>
        <%= render partial: 'workflows/workflow_diagram', locals: { workflow:  @workflow, editable: true } %>

        <div class="form-group actions">
          <%= f.submit "Save workflow", class: 'btn btn-primary workflow-form-submit' %>
          <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                      workflows_path, :class => 'btn btn-default' %>
        </div>
      </div>
    </div>
<% end %>

<script>
  $(window).unbind('page:before-change', Workflows.promptBeforeLeaving);
  $(window).unbind('beforeunload', Workflows.promptBeforeLeaving);
  $(window).bind('page:before-change', Workflows.promptBeforeLeaving);
  $(window).bind('beforeunload', Workflows.promptBeforeLeaving);
</script>
