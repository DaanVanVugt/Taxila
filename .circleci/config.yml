# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  ruby: circleci/ruby@0.1.2
  node: circleci/node@4.7.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:  
    working_directory: '~/TeSS'
    docker: 
      - image: circleci/ruby:2.5.8
        environment: 
          PGHOST: localhost
          PGUSER: TeSS
          RAILS_ENV: test
      - image: postgres:12
        environment: 
          POSTGRES_USER: test_user 
          POSTGRES_DB: travis_ci_test
          POSTGRES_PASSWORD: awesome_secure_password
    steps: 
      - checkout
      - run:
          name: install gems
          command: |
            pwd;
            gem install bundler -v '~> 2.2.27'
            bundle install;
            ruby --version;
            bundle --version;
            rails --version;
      - run:
          name: TeSS tests
          command: |
            cp config/tess.example.yml config/tess.yml;
            cp config/secrets.travis.yml config/secrets.yml;
            bundle exec rake db:setup;
            bundle exed rake test;

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
#workflows:
  # sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    #jobs:
    #  - build
